{
  "describe:it": {
    "prefix": "desc",
    "body": "describe('$1', () => {\n$2})",
    "description": "JCustom: testing describe()"
  },
  "test:it": {
    "prefix": "it_expt",
    "body": "it('should $1', () => {\n  expect(${2:value}).toBe(${3:expected})\n})",
    "description": "j: testing it()"
  },
  "jest:expect": {
    "prefix": "ext",
    "body": "expect($0)",
    "description": "j: jest expect()"
  },
  "desc:it:expect": {
    "prefix": "desc_it_expt",
    "body": "describe('$1', () => {\n  it('should', () => {\n    expect(true).toBe(true)\n  })\n})",
    "description": "j: jest describe->it->expect"
  },
  "jest:expect_to_be": {
    "prefix": "extb",
    "body": "expect($1).toBe($2)",
    "description": "j: jest expect().toBe()"
  },
  "jest:expect_to_equal": {
    "prefix": "extq",
    "body": "expect($1).toEqual($2)",
    "description": "j: jest expect().toEqual()"
  },
  "jest:before_each": {
    "prefix": "be",
    "body": "beforeEach(() => {\n\t$1\n})\n",
    "description": "j: jest beforeEach"
  },
  "jest:after_each": {
    "prefix": "ae",
    "body": "afterEach(() => {\n\t$1\n})\n",
    "description": "j: jest afterEach"
  },
  "jest:before_all": {
    "prefix": "ba",
    "body": "beforeAll(() => {\n\t$1\n})\n",
    "description": "j: jest beforeAll"
  },
  "jest:after_all": {
    "prefix": "aa",
    "body": "afterAll(() => {\n\t$1\n})\n",
    "description": "j: jest afterAll"
  },
  "jest:expect_to_be_callled": {
    "prefix": "extb",
    "body": "expect($1).toHaveBeenCalled()",
    "description": "j: jest to be called"
  },
  "jest:expect_to_not_be_callled": {
    "prefix": "exttnb",
    "body": "expect($1).not.toHaveBeenCalled()",
    "description": "j: jest not to be called"
  },
  "jest:expect_to_be_callled_times": {
    "prefix": "extb",
    "body": "expect($1).toHaveBeenCalledTimes($2)",
    "description": "j: jest to be called times"
  }
}
