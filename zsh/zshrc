export USER=""
# Path to your oh-my-zsh installation.
export ZSH="/Users/$USER/.oh-my-zsh"

# theme
ZSH_THEME="robbyrussell"

eval "$(/opt/homebrew/bin/brew shellenv)"

#. ~/.z.sh
# zsh plugins
plugins=(
  git
  z
  macos
  zsh-syntax-highlighting
  zsh-autosuggestions
  fzf-z
)

source $ZSH/oh-my-zsh.sh

RPROMPT='%{$fg_bold[blue]%} %T %D % %'

# aliases
## general
alias sz="du -hs" # stands for getting the folder size

alias pbc="pbcopy"
alias pbp="pbpaste"
alias l="eza --long --git"
alias ll="eza --long"
alias lla="eza -a --long"
alias cat="bat"
alias more="bat"
alias dk="docker"
alias dkimg="dk images"
alias dkcnt="dk container ls"
alias finder="ofd"
alias here="ofd"
alias cph="pwd | pbc" # copy current path to clipboard

alias prev="cd -"
alias npg="npm ls -g --depth=0"
alias hosts="cat /etc/hosts"
alias findpid="sudo lsof -i -P | grep"
alias e="exit"
alias w="webstorm"

## deno
alias dr="deno run"

## python
alias py="python3"

## nvim
alias nv="nvim"

## rbenv
alias r="/Users/$USER/.rbenv/shims/ruby"
alias rbe="rbenv"
alias rbls="rbenv versions"

## tmux
alias tma="tmux attach -t $1"
alias tmd="tmux detach"
alias tmk="tmux kill-session -t $1"
alias tm="tmux"

## kubectl
alias k="kubectl"
alias kgp="k get pods"

## git
alias g="git"
alias gs="git sign"
alias gco="git checkout"
alias gaa="git add ."
alias gfix="git fix"
alias gupd="git update"
alias gupdm="git updm"
alias gst="git status"
alias gsend="git pupu -f"
alias gdif="git diffmaster"
alias gdifm="git diffmain"
alias gri="git rebase -i origin/master"
alias grim="git rebase -i origin/main"
alias grm="git rebase main"
alias grn="git rename"
alias gm="git cho master"
alias gmm="git cho main"
alias ghi="git hi"
alias ghir="git hir"
alias gl="git last"
alias gn="git new"
alias gr="git rename"
alias grel="git reset ."
alias gb='git branch --sort=-committerdate | fzf --header Checkout | xargs git checkout'
alias gch='git recent | fzf --height=20% --info=inline | xargs git checkout'
# attempt-to-add: let to see git diff for untracked files
alias gdu='git add -N . && git diff'
alias gsta='git add . && git stash'
alias gunsta='git unstash && git reset .'

## git-extras
alias gsummary="/Users/$USER/.git_extras/git_summary"
alias gmerged="/Users/$USER/.git_extras/git_merged"
alias gunmerged="/Users/$USER/.git_extras/git_unmerged"

## gh
alias ghp="gh markdown-preview --light-mode"
alias ghh="gh pr create --fill"
alias ghhd="gh pr create --fill --draft"
alias ghb="gh branch"
alias ghw="gh repo view --web"

## sqlite3
alias sqlite="sqlite3"
alias sqlt="sqlite3"

## nvm
alias nvc="nvm current"
alias nv18="nvm use 18"
alias nv20="nvm use 20"

## git peek by Jarred Sumner
alias gp="git peek"

## alias for gitui
alias gi="gitui"

## alias for ts-node
alias tsn="ts-node"

## ffmpeg
alias ff_convert="ffmpeg -i $1 -vf scale=1920:1080 -preset slow -crf 18 ./converted.mov"

## git project loc
# git ls-files | xargs cat | wc -l
# or even a shorter variant, like
# git ls-files | xargs wc -l

## fe
alias scrpt="more package.json | grep '\"scripts\":' -A 13"

## npm
alias nrun="npm run"
alias nstart="npm start"

## yarn
alias yb="yarn build"

## pnpm
alias prun="pnpm run"
alias prtr="prun test:related"
alias pstart="pnpm start"
alias png="pnpm ls -g"
alias pn="pnpm"
alias pout="pnpm outdated"
alias pb="prun build"
alias pi="pnpm install"
alias pbs="prun build:with-source-maps"

## configs
alias zcon="nvim ~/.zshrc"
alias zupd="source ~/.zshrc"

alias nvcon="nvim ~/.config/nvim/init.vim"

alias gcon="nvim ~/.gitconfig"

alias tcon="nvim ~/.tmux.conf"
alias tupd="tmux source ~/.tmux.conf"

# binds
bindkey "^f" forward-word 
bindkey "^i" end-of-line

# export NVM | autogenerated
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# NOTE: @gene, FIX this please
#     echo "node is 14.x"
#   else
#     echo "node is not 14.x"
# fi
# eval "nvm use default"


# configs
##nnn
export NNN_FIFO='/tmp/nnn.fifo'
# export NNN_PLUG='j:autojump;h:here;p:preview-tui'
# NOTE: temporarily disabled my custom `here`
export NNN_PLUG='j:autojump;g:gitroot;p:preview-tui'
export VISUAL=nvim
export EDITOR=nvim

function n {
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, either remove the "export" as in:
    #    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #    (or, to a custom path: NNN_TMPFILE=/tmp/.lastd)
    # or, export NNN_TMPFILE after nnn invocation
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #
    # # # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # # # stty start undef
    # # # stty stop undef
    # # # stty lwrap undef
    # # # stty lnext undef
    # #
    # # nnn "$@"
    TMUX='' tmux new-session nnn $@

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

## fzf config
## export of FZF stuff, related for cli history
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

FD_OPTIONS="--follow --exclude .git --exclude node_modules"

## ctrl-d:half-page-down,ctrl-u:half-page-up -- maybe one day you'll gonna need this
export FZF_DEFAULT_OPTS="--height 50% -1 --bind='ctrl-y:execute-silent(echo {+} | pbcopy)'"

## to use external "fd" tool
export FZF_DEFAULT_COMMAND="fd --type f --type l $FD_OPTIONS"
## stands for search files mode
export FZF_CTRL_T_COMMAND="fd $FD_OPTIONS"
## stands for go to mode
export FZF_ALT_C_COMMAND="fd --type d  $FD_OPTIONS"

# NOTE: fzf theme generator 
# https://vitormv.github.io/fzf-themes/
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
  --color=fg:#d0d0d0,fg+:#d0d0d0,bg:#352323,bg+:#133daf
  --color=hl:#5f87af,hl+:#5fd7ff,info:#afaf87,marker:#62b505
  --color=prompt:#00acea,spinner:#af5fff,pointer:#19fb19,header:#87afaf
  --color=border:#262626,label:#aeaeae,query:#d9d9d9
  --border="rounded" --border-label="" --preview-window="border-rounded" --prompt="> "
  --marker=">" --pointer="->" --separator="─" --scrollbar="│"'

## sessions configs EXAMPLE
alias liroo="ssh -i ~/.ssh/<ssh_key> <user>@<ip>"

# PATH
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# nvim LSP
export PATH="/Users/$USER/.local/share/nvim/lsp_servers/tsserver/node_modules/.bin:$PATH"

# NOTE: to make this work, please refer to your custom tmux/README.md
export TERMINFO_DIRS=$TERMINFO_DIRS:$HOME/.local/share/terminfo

## export GO
export PATH="$PATH:/usr/local/go/bin"

## export ngrok
export PATH="$PATH:/usr/local/ngrok"

## export the newest bash 5.x
## NOTE: if I'm not mistaken this was needed for some tmux update?!?
export PATH="$PATH:/usr/local/Cellar/bash/5.1.8/bin"

## export pip
export PATH="$PATH:/Users/$USER/Library/Python/3.8/bin"

## deno
export DENO_INSTALL="/Users/$USER/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

## rbenv
eval "$(rbenv init - zsh)"

## ruby | minitest
export MINITEST_REPORTER="SpecReporter"

# pnpm
export PNPM_HOME="/Users/$USER/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"

# bun completions
[ -s "/Users/$USER/.bun/_bun" ] && source "/Users/$USER/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
